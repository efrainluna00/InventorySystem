package com.saldei.hibernate.tables.activos;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import com.saldei.hibernate.querys.QuerysSeguridad;
import com.saldei.hibernate.tables.Usuario;
import com.saldei.hibernate.tables.inventario.InvBodega;
import com.saldei.hibernate.tables.inventario.InvBodegaDAO;
import com.saldei.hibernate.tables.inventario.InvRecurso;
import com.saldei.hibernate.tables.inventario.InvRecursoDAO;
import com.saldei.hibernate.tables.inventario.InvSubCategoriaId;
import com.saldei.util.hibernate.dao.HibDAO;
import com.saldei.util.hibernate.dao.HibDAOImpl;
import com.saldei.util.hibernate.dao.HibernateSessionFactory;
import com.saldei.web.bean.Util;
import com.saldei.web.bean.seguridad.UsuarioDto;
import com.saldei.web.services.seguridad.UsuarioServices;

// Generated by MyEclipse Persistence Tools

/**
 * ActSolicitud generated by MyEclipse Persistence Tools
 */
public class ActSolicitud extends AbstractActSolicitud implements
		java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String link;
	private String detRequisicionLink;
	private String desBodega;
	private String nombre;
	SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
	SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
	private HibDAO dao = new HibDAOImpl();

	// Constructors

	/** default constructor */
	public ActSolicitud() {
	}

	/** minimal constructor */
	public ActSolicitud(ActSolicitudId id) {
		super.setId(id);
	}

	/** minimal constructor */
	public ActSolicitud(ActSolicitudId id, ActUnidad actUnidad) {
		super.setId(id);
		super.setActUnidad(actUnidad);
	}

	/** minimal constructor */
	public ActSolicitud(ActSolicitudId id, ActProveedor actProveedor) {
		super.setId(id);
	}

	/** minimal constructor */
	public ActSolicitud(ActSolicitudId id, ActUnidad actUnidad,
			ActProveedor actProveedor) {
		super.setId(id);
		super.setActUnidad(actUnidad);
	}

	/**
	 * @return the link
	 */

	public String getPrestamoLink() {
		String link = " <a  href='#' onclick=\"javascript:enviarSolPrestamo('Find','"
				+ this.getId().getCodSolicitud()
				+ "','"
				+ this.getCodPropietario()
				+ "','"
				+ this.getEstado()
				+ "','"
				+ sdf.format(this.getFechaIniPrestamo())
				+ "','"
				+ sdf.format(this.getFechaFinPrestamo())
				+ "','"
				+ this.getComentario()
				+ "','"
				+ this.getActUnidad().getCodUnidad()
				+ "','"
				+ this.getCodSolicitante() + "');return false;\" >";
		link += " Buscar Recurso</a>";

		return link;
	}

	public String getArprestamoLink() {
		String link = " <a  href='#' onclick=\"javascript:enviarDetAprSolPrestamo('Find','"
				+ this.getId().getCodSolicitud()
				+ "','"
				+ this.getCodSolicitante()
				+ "','"
				+ this.getEstado()
				+ "','"
				+ sdf.format(this.getFechaIniPrestamo())
				+ "','"
				+ sdf.format(this.getFechaFinPrestamo())
				+ "','"
				+ this.getComentario() + "');return false;\" >";
		link += " Ver Detalle</a>";

		return link;
	}

	/**
	 * @param id
	 * @param actUnidad
	 * @param actProveedor
	 * @param codSolicitante
	 * @param estado
	 * @param codBodega
	 * @param fechaCreacion
	 * @param fechaIniPrestamo
	 * @param fechaFinPrestamo
	 * @param urlCotizacion
	 * @param codPropietario
	 * @param comentario
	 * @param actDetSolicituds
	 */

	public String getFecha_aprobacion() {
		if (this.getFechaAprobacion() != null)
			return sdf.format(this.getFechaAprobacion());
		else
			return "";
	}

	/**
	 * @param fecha_aprobacion
	 *            the fecha_aprobacion to set
	 */
	public void setFecha_finalizacion(String fecha_finalizacion)
			throws ParseException {
		if (fecha_finalizacion != null && !fecha_finalizacion.equals(""))
			this.setFechaFinalizacion(sdf.parse(fecha_finalizacion));
	}

	public String getFecha_finalizacion() {
		if (this.getFechaFinalizacion() != null)
			return sdf.format(this.getFechaFinalizacion());
		else
			return "";
	}

	/**
	 * @param fecha_aprobacion
	 *            the fecha_aprobacion to set
	 */
	public void setFecha_aprobacion(String fecha_aprobacion)
			throws ParseException {
		if (fecha_aprobacion != null && !fecha_aprobacion.equals(""))
			this.setFechaAprobacion(sdf.parse(fecha_aprobacion));
	}

	public String getFecha_ini() {
		if (this.getFechaIniPrestamo() != null)
			return sdf.format(this.getFechaIniPrestamo());
		else
			return "";
	}

	public String getFecha_fin() {
		if (this.getFechaFinPrestamo() != null)
			return sdf.format(this.getFechaFinPrestamo());
		else
			return "";

	}

	public void setFecha_ini(String fecha_ini) throws ParseException {
		if (fecha_ini != null && !fecha_ini.equals(""))
			this.setFechaIniPrestamo(sdf.parse(fecha_ini));
	}

	public void setFecha_fin(String fecha_fin) throws ParseException {
		if (fecha_fin != null && !fecha_fin.equals(""))
			this.setFechaFinPrestamo(sdf.parse(fecha_fin));
	}

	public void setFecha_anulacion(String fecha_anulacion)
			throws ParseException {
		if (fecha_anulacion != null && !fecha_anulacion.equals(""))
			this.setFechaAnulacion(sdf.parse(fecha_anulacion));
	}

	public String getFecha_anulacion() {
		if (this.getFechaAnulacion() != null)
			return sdf.format(this.getFechaAnulacion());
		else
			return "";
	}

	/**
	 * @param id
	 * @param estado
	 */
	public ActSolicitud(ActSolicitudId id, String estado) {
		super(id, estado);
		// TODO Auto-generated constructor stub
	}

	/**
	 * @param id
	 * @param actUnidad
	 * @param actCuenta
	 * @param codSolicitante
	 * @param estado
	 * @param codBodega
	 * @param fechaCreacion
	 * @param fechaIniPrestamo
	 * @param fechaFinPrestamo
	 * @param codPropietario
	 * @param comentario
	 * @param motivoRechazo
	 * @param motivoAnulacion
	 * @param fechaAprobacion
	 * @param fechaAnulacion
	 * @param fechaFinalizacion
	 * @param actDetSolicituds
	 * @param actCotizacions
	 * @throws Exception
	 */

	public boolean getCotizaciones() throws Exception {
		ActCotizacionDAO actCotizacionDAO = new ActCotizacionDAO();
		List data = actCotizacionDAO.findByEstadoSol(this.getId()
				.getTipoSolicitud(), String.valueOf(this.getId()
				.getCodSolicitud()), "C");
		List data2 = actCotizacionDAO.findAll(this.getId().getTipoSolicitud(),
				String.valueOf(this.getId().getCodSolicitud()));
		HibernateSessionFactory.getSession().close();
		if (data != null && data2 != null && !data2.isEmpty())
			return !data.isEmpty();
		else
			return true;
	}

	public String getEstadoDesc() {
		return Util.descripcionEstado(this.getEstado());
	}

	/**
	 * @return
	 * @see com.saldei.hibernate.tables.activos.ActSolicitud#getLinkSolicitudCompra()
	 */
	public String getLinkSolicitudCompra() {
		String link = " <a  href='#' onclick=\"javascript:enviarSolCompra('Find','"
				+ this.getId().getCodSolicitud() + "');return false;\" >";
		link += " Cotizaciones de Compra</a>";
		return link;
	}

	/**
	 * @return
	 * @see com.saldei.hibernate.tables.activos.ActSolicitud#getLinkAprSolicitudCompra()
	 */
	public String getLinkAprSolicitudCompra() {
		String link = " <a  href='#' onclick=\"javascript:enviarSolCompra('Enviar','"
				+ this.getId().getCodSolicitud()
				+ "','"
				+ this.getId().getTipoSolicitud() + "');return false;\" >";
		link += " Aprobacion/Rechazo</a>";
		return link;
	}

	/**
	 * @return
	 * @see com.saldei.hibernate.tables.activos.ActSolicitud#getLinkIngSolicitudCompra()
	 */
	public String getLinkIngSolicitudCompra() {
		String link = " <a  href='#' onclick=\"javascript:enviarSolCompra('Enviar','"
				+ this.getId().getCodSolicitud()
				+ "','"
				+ this.getId().getTipoSolicitud() + "');return false;\" >";
		link += " Ingresar Existencias</a>";
		return link;
	}

	/**
	 * @return
	 * @see com.saldei.hibernate.tables.activos.ActSolicitud#getLinkIngSolicitudCompra()
	 */
	public String getLinkSalSolSuministro() {
		String link = " <a  href='#' onclick=\"javascript:enviarSolicitud('Enviar','"
				+ this.getId().getCodSolicitud()
				+ "','"
				+ this.getId().getTipoSolicitud() + "');return false;\" >";
		link += " Entregar Suministro</a>";
		return link;
	}

	/**
	 * @return
	 * @see com.saldei.hibernate.tables.activos.ActSolicitud#getLinkSalSolicitudRecursos
	 */
	public String getLinkSalSolRecursos() {
		String link = " <a  href='#' onclick=\"javascript:enviarSolicitud('Enviar','"
				+ this.getId().getCodSolicitud()
				+ "','"
				+ this.getId().getTipoSolicitud() + "');return false;\" >";
		link += " Entregar Recursos</a>";
		return link;
	}

	/**
	 * @return
	 * @see com.saldei.hibernate.tables.activos.ActSolicitud#getLinkIngSolicitudAbas()
	 */
	public String getLinkIngSolicitudAbas() {
		String link = " <a  href='#' onclick=\"javascript:enviarSolicitud('Enviar','"
				+ this.getId().getCodSolicitud()
				+ "','"
				+ this.getId().getTipoSolicitud() + "');return false;\" >";
		link += " Ingresar Existencias</a>";
		return link;
	}

	/**
	 * @param id
	 * @param actUnidad
	 * @param actDetPresupuesto
	 * @param codSolicitante
	 * @param estado
	 * @param codBodega
	 * @param fechaCreacion
	 * @param fechaIniPrestamo
	 * @param fechaFinPrestamo
	 * @param codPropietario
	 * @param comentario
	 * @param motivoRechazo
	 * @param motivoAnulacion
	 * @param fechaAprobacion
	 * @param fechaAnulacion
	 * @param fechaFinalizacion
	 * @param asigCompra
	 * @param comentarioTecnico
	 * @param actDetSolicituds
	 * @param actCotizacions
	 */
	public ActSolicitud(ActSolicitudId id, ActUnidad actUnidad,
			ActDetPresupuesto actDetPresupuesto, String codSolicitante,
			String estado, Integer codBodega, Date fechaCreacion,
			Date fechaIniPrestamo, Date fechaFinPrestamo,
			String codPropietario, String comentario, String motivoRechazo,
			String motivoAnulacion, Date fechaAprobacion, Date fechaAnulacion,
			Date fechaFinalizacion, String asigCompra,
			String comentarioTecnico, Set actDetSolicituds, Set actCotizacions) {
		super(id, actUnidad, actDetPresupuesto, codSolicitante, estado,
				codBodega, fechaCreacion, fechaIniPrestamo, fechaFinPrestamo,
				codPropietario, comentario, motivoRechazo, motivoAnulacion,
				fechaAprobacion, fechaAnulacion, fechaFinalizacion, asigCompra,
				comentarioTecnico, actDetSolicituds, actCotizacions);
		// TODO Auto-generated constructor stub
	}

	public String getDesBodega() {
		InvBodegaDAO invBodegaDAO = new InvBodegaDAO();
		InvBodega invBodega = new InvBodega();
		if (this.getCodBodega() != null) {
			invBodega = invBodegaDAO.findById(this.getCodBodega());
			return invBodega.getNombre();
		} else
			return "";
	}

	public String getNombre() {
		UsuarioServices usuarioServices = new UsuarioServices();
		UsuarioDto usuarioDto;
		String solicitante = null;
		try {
			usuarioDto = usuarioServices
					.getUsuarioDto(this.getCodSolicitante());
			solicitante = usuarioDto.getPrimerNom() + " "
					+ usuarioDto.getPrimerApe();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return solicitante;
	}

	public String getFecha_creacion() {
		if (this.getFechaCreacion() != null)
			return sdf2.format(this.getFechaCreacion());
		else
			return "";

	}
}
