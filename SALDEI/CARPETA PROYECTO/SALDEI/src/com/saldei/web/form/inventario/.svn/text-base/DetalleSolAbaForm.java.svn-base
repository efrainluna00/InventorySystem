/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.saldei.web.form.inventario;

import java.util.Iterator;
import java.util.List;
import java.util.ResourceBundle;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;



import com.saldei.hibernate.tables.activos.ActActivo;
import com.saldei.hibernate.tables.activos.ActDetSolicitud;
import com.saldei.hibernate.tables.activos.ActDetSolicitudId;
import com.saldei.hibernate.tables.activos.ActSolicitud;
import com.saldei.hibernate.tables.activos.ActSolicitudId;
import com.saldei.hibernate.tables.inventario.InvDetMovimiento;
import com.saldei.hibernate.tables.inventario.InvDetMovimientoDAO;
import com.saldei.hibernate.tables.inventario.InvDetMovimientoId;
import com.saldei.hibernate.tables.inventario.InvMovimiento;
import com.saldei.hibernate.tables.inventario.InvMovimientoDAO;
import com.saldei.hibernate.tables.inventario.InvRecurso;
import com.saldei.util.hibernate.dao.HibernateSessionFactory;

/** 
 * MyEclipse Struts
 * Creation date: 07-07-2009
 * 
 * XDoclet definition:
 * @struts.form name="detalleSolAbaForm"
 */
public class DetalleSolAbaForm extends ActionForm {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method validate
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	
	
	//public ActDetSolicitud(ActDetSolicitudId id, String codRecurso, Integer cantidad) {
	private ActDetSolicitud actDetSolicitud = new ActDetSolicitud(new ActDetSolicitudId(new ActSolicitud(new ActSolicitudId("",0)),0),"",0);
	private ActSolicitud actSolicitud = new ActSolicitud();
	private String tipoSolicitud;
	private Integer codSolicitud;
	private String codSolicitante;
	private String codActivo;
	private String nombreRecurso;
	private Integer correlativo;
	private String estado;
	private String codSol2;
	private String estadoNombre;
	private String comentario;
	private String codBodega;
	private String codRecurso;
	private String categoria;
	private String subcategoria;
	private Integer cantidad;
	private String bodegaDes;
	//private String codActivo2;
	
	
	

	/** 
	 * Method reset
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		// TODO Auto-generated method stub
		//actDetSolicitud = new ActDetSolicitud(new ActDetSolicitudId(new ActSolicitud(new ActSolicitudId("",0)),0), new ActActivo()),0,"",0.0,0);
		actSolicitud = actDetSolicitud.getId().getActSolicitud();
		//actSolicitud.setEstado(this.getEstado());
		actDetSolicitud = new ActDetSolicitud(new ActDetSolicitudId(new ActSolicitud(new ActSolicitudId("",0)),0),"",0);
		this.actDetSolicitud.getId().setActSolicitud(actSolicitud);
		//this.setTipoSolicitud("");
		//this.setCodSolicitud(0);
		//this.setCodActivo2("");
		this.setNombreRecurso("");
		//this.setCodSol2("");
		//this.setCorrelativo(0);
		//this.setDescripcion("");
	}



	public ActActivo getActActivo() {
		return actDetSolicitud.getActActivo();
	}



	public Integer getCantidad() {
		return actDetSolicitud.getCantidad();
	}



	public String getCodRecurso() {
		return actDetSolicitud.getCodRecurso();
	}



	public ActDetSolicitudId getId() {
		return actDetSolicitud.getId();
	}



	public double getPrecioUnitario() {
		return actDetSolicitud.getPrecioUnitario();
	}



	public void setActActivo(ActActivo actActivo) {
		actDetSolicitud.setActActivo(actActivo);
	}



	public void setCantidad(Integer cantidad) {
		actDetSolicitud.setCantidad(cantidad);
	}



	public void setCodRecurso(String codRecurso) {
		actDetSolicitud.setCodRecurso(codRecurso);
	}



	public void setId(ActDetSolicitudId id) {
		actDetSolicitud.setId(id);
	}



	public void setPrecioUnitario(double precioUnitario) {
		actDetSolicitud.setPrecioUnitario(precioUnitario);
	}



	public ActDetSolicitud getActDetSolicitud() {
		return actDetSolicitud;
	}



	public void setActDetSolicitud(ActDetSolicitud actDetSolicitud) {
		this.actDetSolicitud = actDetSolicitud;
	}


	
	//Metodos propios de la tabla de detalle de solicitudes

	public String getTipoSolicitud() {
		return actDetSolicitud.getId().getActSolicitud().getId().getTipoSolicitud();
	}



	public void setTipoSolicitud(String tipoSolicitud) {
		this.actDetSolicitud.getId().getActSolicitud().getId().setTipoSolicitud(tipoSolicitud);
	}



	public Integer getCodSolicitud() {
		return actDetSolicitud.getId().getActSolicitud().getId().getCodSolicitud();
	}


	public void setCodSolicitud(Integer codSolicitud) {
		this.actDetSolicitud.getId().getActSolicitud().getId().setCodSolicitud(codSolicitud); 
	}



	public String getCodActivo() {
		if(actDetSolicitud.getActActivo().getCodActivo()!=null)
			return String.valueOf(actDetSolicitud.getActActivo().getCodActivo());
			else
				return "";
	//	return actDetSolicitud.getActActivo().getCodActivo();
	}	
	



	public void setCodActivo(String codActivo) {
		if(codActivo!=null && !codActivo.trim().equals(""))
			actDetSolicitud.getActActivo().setCodActivo(Integer.valueOf(codActivo));
		
		//this.actDetSolicitud.getActActivo().setCodActivo(codActivo);
		}



	public ActSolicitud getActSolicitud() {
		return actSolicitud;
	}



	public void setActSolicitud(ActSolicitud actSolicitud) {
		this.actSolicitud = actSolicitud;
	}



	public ActSolicitudId getSolId() {
		return actSolicitud.getId();
	}



	public void setSolId(ActSolicitudId id) {
		actSolicitud.setId(id);
	}



	public String getNombreRecurso() {
		return nombreRecurso;
	}



	public void setNombreRecurso(String nombreRecurso) {
		this.nombreRecurso = nombreRecurso;
	}

	public void validate(ActionMapping mapping,
			HttpServletRequest request, ActionErrors errors) {
		String accion = request.getParameter("accion");
		accion = (accion==null)?"":accion;
		
		ResourceBundle mensajes = ResourceBundle.getBundle("com.saldei.web.ApplicationResources");
		if(!accion.equals(mensajes.getString("opc.cancel")) && !accion.equals(mensajes.getString("opc.find"))){
			if(this.getCodRecurso() == null ||  this.getCodRecurso().toString().trim().equals("") ){
				errors.add("detsolaba.recurso.requerido", new ActionError("detsolaba.recurso.requerido"));
			}
			if(this.getCantidad() == null ||  this.getCantidad()==0 ){
				errors.add("detsolaba.cantidad.requerido", new ActionError("detsolaba.cantidad.requerido"));
			}
			else{
				if(this.getCantidad()<0)
					errors.add("detsolaba.cantidad.valida", new ActionError("detsolaba.cantidad.valida"));
			}
			
			
		}				
		// TODO Auto-generated method stub
	
	}



	public Integer getCorrelativo() {
		return actDetSolicitud.getId().getCorrelativo();
	}



	public void setCorrelativo(Integer correlativo) {
		actDetSolicitud.getId().setCorrelativo(correlativo);
	}



	public String getCodSolicitante() {
		return codSolicitante;
	}



	public void setCodSolicitante(String codSolicitante) {
		this.codSolicitante = codSolicitante;
	}



	public String getEstado() {
		return estado;
	}



	public void setEstado(String estado) {
		this.estado = estado;
	}



	public String getCodSol2() {
		return codSol2;
	}



	public void setCodSol2(String codSol2) {
		this.codSol2 = codSol2;
	}



	public String getEstadoNombre() {
		return estadoNombre;
	}



	public void setEstadoNombre(String estadoNombre) {
		this.estadoNombre = estadoNombre;
	}



	public String getComentario() {
		return comentario;
	}



	public void setComentario(String comentario) {
		this.comentario = comentario;
	}



	public String getCodBodega() {
		return codBodega;
	}



	public void setCodBodega(String codBodega) {
		this.codBodega = codBodega;
	}



	public String getCategoria() {
		return categoria;
	}



	public void setCategoria(String categoria) {
		this.categoria = categoria;
	}



	public String getSubcategoria() {
		return subcategoria;
	}



	public void setSubcategoria(String subcategoria) {
		this.subcategoria = subcategoria;
	}

	
	public Integer getCantidadIngresada(){
		
		List data;
		InvMovimiento invMovimiento;
		InvMovimientoDAO invMovimientoDAO =  new InvMovimientoDAO();
		InvDetMovimientoDAO invDetMovimientoDAO = new InvDetMovimientoDAO();
		InvDetMovimiento invDetMovimiento = null;
		InvRecurso invRecurso =  new InvRecurso();
		invRecurso.setCodRecurso(this.getCodRecurso());
		Iterator it;
		int cantidadAcumulada = 0;
		data = invMovimientoDAO.findAllBySolicitudIn(this.getTipoSolicitud(),this.getCodSolicitud());
		if(data != null && !data.isEmpty()){
			it =  data.iterator();
			for(int i=0; it.hasNext();i++ ){
				invMovimiento =  (InvMovimiento) it.next();
				invDetMovimiento =  invDetMovimientoDAO.findById(new InvDetMovimientoId(invMovimiento,invRecurso));
				if(invDetMovimiento != null)					
					cantidadAcumulada = cantidadAcumulada+invDetMovimiento.getCantidad();
			}			
			
		}
			
		
		HibernateSessionFactory.getSession().close();
		return cantidadAcumulada;
	}



	public String getBodegaDes() {
		return bodegaDes;
	}



	public void setBodegaDes(String bodegaDes) {
		this.bodegaDes = bodegaDes;
	}
	

}