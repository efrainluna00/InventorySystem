/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.saldei.web.action.activos;

import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessages;

import com.saldei.hibernate.tables.activos.ActActivo;
import com.saldei.hibernate.tables.activos.ActActivoDAO;
import com.saldei.hibernate.tables.activos.ActHistUnidadActivoDAO;
import com.saldei.hibernate.tables.activos.ActMotivoBaja;
import com.saldei.util.hibernate.dao.HibernateSessionFactory;
import com.saldei.web.action.BaseAction;
import com.saldei.web.form.activos.BajaActivoForm;

/**
 * MyEclipse Struts Creation date: 07-03-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/bajaActivoAction" name="bajaActivoForm"
 *                input="/html/activos/bajaActivo.jsp" parameter="accion"
 *                scope="request"
 */
public class BajaActivoAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		BajaActivoForm bajaActivoForm = (BajaActivoForm) form;
		ActActivoDAO actActivoDAO = new ActActivoDAO();
		ActActivo actActivo = new ActActivo(new ActMotivoBaja());
		List act;
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;

		try {
			bajaActivoForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				actActivo = actActivoDAO.findById(bajaActivoForm.getActActivo()
						.getCodActivo());
				act = actActivoDAO.verificarBaja(actActivo.getCodActivo());
				if (act.isEmpty()) {
					actActivo.setActMotivoBaja(bajaActivoForm.getActActivo()
							.getActMotivoBaja());
					actActivo.setEstado("B");
					if (bajaActivoForm.getMotivo() != null)
						actActivo.setMotivo(bajaActivoForm.getMotivo());
					actActivoDAO.save(actActivo);
					HibernateSessionFactory.getSession().beginTransaction()
							.commit();
					errors.add("bajaActivo.mensaje.exito", new ActionError(
							"bajaActivo.mensaje.exito.insert"));
				} else {
					errors.add("bajaActivo.mensajeError.error",
							new ActionError(
									"bajaActivo.mensajeError.error.nobaja"));
				}
			} else {
				setFLAG_UPDATE(true);
			}
		}

		catch (Exception e) {
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();
			// TODO: handle exception
		} finally {
			HibernateSessionFactory.getSession().close();
		}

		find(mapping, form, request, response);
		return mapping.findForward(target);
	}

	@Override
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		return null;
	}

	public ActionForward find(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception, ServletException {
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;
		List data;

		BajaActivoForm bajaActivoForm = (BajaActivoForm) form;
		ActHistUnidadActivoDAO actHistUnidadActivoDAO = new ActHistUnidadActivoDAO();

		try {

			data = actHistUnidadActivoDAO.findAll();
			request.setAttribute("listActivosBaja", data);

			if (!isFLAG_UPDATE()) {
				bajaActivoForm.reset(mapping, request);
			} else {
				setFLAG_UPDATE(false);
			}
			// detallePptoForm.setCodPresupuesto(codppto);

		} catch (Exception e) {
			e.printStackTrace();
			// TODO: handle exception
		} finally {
			HibernateSessionFactory.getSession().close();
		}
		return mapping.findForward(target);
	}
}