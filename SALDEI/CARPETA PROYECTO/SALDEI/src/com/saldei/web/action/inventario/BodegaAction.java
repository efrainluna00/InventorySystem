/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.saldei.web.action.inventario;

import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessages;
import org.hibernate.exception.ConstraintViolationException;

import com.saldei.hibernate.tables.activos.ActPresupuestoDAO;
import com.saldei.hibernate.tables.activos.ActTipoUnidadDAO;
import com.saldei.hibernate.tables.inventario.InvBodega;
import com.saldei.hibernate.tables.inventario.InvBodegaDAO;
import com.saldei.util.hibernate.dao.HibernateSessionFactory;
import com.saldei.web.action.BaseAction;
import com.saldei.web.form.activos.PresupuestoForm;
import com.saldei.web.form.activos.TipoUnidadForm;
import com.saldei.web.form.inventario.BodegaForm;

/** 
 * MyEclipse Struts
 * Creation date: 05-27-2009
 * 
 * XDoclet definition:
 * @struts.action path="/bodegaAction" name="bodegaForm" input="/html/inventario/bodega.jsp" parameter="accion" scope="request" validate="true"
 * @struts.action-forward name="success" path="/html/inventario/bodega.jsp"
 * @struts.action-forward name="fail" path="/html/inventario/bodega.jsp"
 */
public class BodegaAction extends BaseAction {

	/* (non-Javadoc)
	 * @see com.saldei.web.action.BaseAction#delete(org.apache.struts.action.ActionMapping, org.apache.struts.action.ActionForm, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.struts.action.ActionErrors, org.apache.struts.action.ActionMessages)
	 */
	@Override
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
	    String target = KEY_SUCCESS;
	    
		BodegaForm bodegaForm = (BodegaForm) form;
		InvBodegaDAO invBodegaDAO = new InvBodegaDAO();					    
		
		try {
			bodegaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				invBodegaDAO.delete(bodegaForm.getInvBodega());
				 HibernateSessionFactory.getSession().beginTransaction().commit();
				errors.add("bode.mensaje.exito", new ActionError("bode.mensaje.exito.delete"));
			   
				
			}else{
				target = "updateFail";
				setFLAG_UPDATE(true);
			}
		}catch (ConstraintViolationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			errors.add("bode.mensajeError.error", new ActionError("bode.mensajeError.error.nodelete"));
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		}catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			//errors.add("bode.mensaje.exito", new ActionError("bode.mensaje.exito.nodelete"));
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		}finally{
			HibernateSessionFactory.getSession().close();
		}
		
	    find(mapping, form, request, response);
		return mapping.findForward(target);
	}

	/* (non-Javadoc)
	 * @see com.saldei.web.action.BaseAction#insert(org.apache.struts.action.ActionMapping, org.apache.struts.action.ActionForm, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.struts.action.ActionErrors, org.apache.struts.action.ActionMessages)
	 */
	@Override
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		InvBodega bodega;
		BodegaForm bodegaForm = (BodegaForm)form;
		InvBodegaDAO invBodegaDAO = new InvBodegaDAO();		
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;
		
		try {
			bodegaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				if(invBodegaDAO.findById(Integer.valueOf(bodegaForm.getCodBodega()))== null){
					invBodegaDAO.save(bodegaForm.getInvBodega());
				    HibernateSessionFactory.getSession().beginTransaction().commit();
					errors.add("bode.mensaje.exito", new ActionError("bode.mensaje.exito.insert"));
				}
				else 
					errors.add("bode.mensajeError.error", new ActionError("bode.mensajeError.error.insert"));
			}else{
				setFLAG_UPDATE(true);
			}
		} catch (Exception e) {
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();
			// TODO: handle exception
		}finally{
			HibernateSessionFactory.getSession().close();
		}
		
	    find(mapping, form, request, response);
		return mapping.findForward(target);
	}

	/* (non-Javadoc)
	 * @see com.saldei.web.action.BaseAction#update(org.apache.struts.action.ActionMapping, org.apache.struts.action.ActionForm, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, org.apache.struts.action.ActionErrors, org.apache.struts.action.ActionMessages)
	 */
	@Override
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		BodegaForm bodegaForm = (BodegaForm) form;
		InvBodegaDAO invBodegaDAO = new InvBodegaDAO();
				
		HttpSession session = request.getSession(true);
	    String target = KEY_SUCCESS;					   			
		
		try {
			bodegaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				invBodegaDAO.merge(bodegaForm.getInvBodega());			    			  
			    HibernateSessionFactory.getSession().beginTransaction().commit();				
				errors.add("bode.mensaje.exito", new ActionError("bode.mensaje.exito.update"));
			}else{
				target = "updateFail";
				setFLAG_UPDATE(true);
			}
		} catch (Exception e) {
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();				
			// TODO: handle exception
		}finally{
			HibernateSessionFactory.getSession().close();
		}
		
	    find(mapping, form, request, response);
		return mapping.findForward(target);
	}
	
	public ActionForward find(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception,
			ServletException {		
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;
		List data;
		
		BodegaForm bodegaForm = (BodegaForm) form;
		InvBodegaDAO invBodegaDAO = new InvBodegaDAO();
		
		try {
							
			data = invBodegaDAO.findAll();
		    request.setAttribute("listBodega", data);
			if(!isFLAG_UPDATE()){
				bodegaForm.reset(mapping, request);
			}else{
				setFLAG_UPDATE(false);
			}			
			
		} catch (Exception e) {
			e.printStackTrace();			
			// TODO: handle exception
		}finally{
			HibernateSessionFactory.getSession().close();
		} 	
		return mapping.findForward(target);
	}
	
	
	
}