/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.saldei.web.action.inventario;

import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessages;
import org.hibernate.exception.ConstraintViolationException;

import com.saldei.hibernate.tables.activos.ActPresupuestoDAO;
import com.saldei.hibernate.tables.inventario.InvCategoria;
import com.saldei.hibernate.tables.inventario.InvCategoriaDAO;
import com.saldei.util.hibernate.dao.HibernateSessionFactory;
import com.saldei.web.action.BaseAction;
import com.saldei.web.form.activos.PresupuestoForm;
import com.saldei.web.form.inventario.CategoriaForm;

/** 
 * MyEclipse Struts
 * Creation date: 05-31-2009
 * 
 * XDoclet definition:
 * @struts.action path="/categoriaAction" name="categoriaForm" input="/html/inventario/categoria.jsp" parameter="accion" scope="request"
 * @struts.action-forward name="updateFail " path="/html/inventario/categoria.jsp"
 * @struts.action-forward name="back" path="/categoriaAction.do?accion=Find"
 * @struts.action-forward name="success" path="/html/inventario/categoria.jsp?accion="
 */
public class CategoriaAction extends BaseAction {

	@Override
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
	    String target = KEY_SUCCESS;
	    
		CategoriaForm categoriaForm = (CategoriaForm) form;
		InvCategoriaDAO invCategoriaDAO = new InvCategoriaDAO();
		try {
			categoriaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				invCategoriaDAO.delete(categoriaForm.getInvCategoria());			    
			    HibernateSessionFactory.getSession().beginTransaction().commit();
				errors.add("cat.mensaje.exito", new ActionError("cat.mensaje.exito.delete"));
			}else{
				target = "updateFail";
				setFLAG_UPDATE(true);
			}
		} catch (ConstraintViolationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			errors.add("cat.mensajeError.error", new ActionError("cat.mensajeError.error.nodelete"));
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		}catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			errors.add("cat.mensaje.exito", new ActionError("cat.mensaje.exito.nodelete"));
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		}finally{
			HibernateSessionFactory.getSession().close();
		}
		
	    find(mapping, form, request, response);
		return mapping.findForward(target);
	}

	@Override
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
	    String target = KEY_SUCCESS;
	    
		CategoriaForm categoriaForm = (CategoriaForm) form;
		InvCategoriaDAO invCategoriaDAO = new InvCategoriaDAO();
		try {
			categoriaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				if(invCategoriaDAO.findById(categoriaForm.getCodCategoria())==null){
					invCategoriaDAO.save(categoriaForm.getInvCategoria());			    
				    HibernateSessionFactory.getSession().beginTransaction().commit();
					errors.add("cat.mensaje.exito", new ActionError("cat.mensaje.exito.insert"));
				}
				else
					errors.add("cat.mensajeError.error", new ActionError("cat.mensajeError.error.noinsert"));
					
			}else{
				setFLAG_UPDATE(true);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		}finally{
			HibernateSessionFactory.getSession().close();
		}
		
	    find(mapping, form, request, response);
		return mapping.findForward(target);
	}

	@Override
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
	    String target = KEY_SUCCESS;
	    
		CategoriaForm categoriaForm = (CategoriaForm) form;
		InvCategoriaDAO invCategoriaDAO = new InvCategoriaDAO();
		try {
			categoriaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				invCategoriaDAO.merge(categoriaForm.getInvCategoria());			    
			    HibernateSessionFactory.getSession().beginTransaction().commit();
				errors.add("cat.mensaje.exito", new ActionError("cat.mensaje.exito.update"));
			}else{
				target = "updateFail";
				setFLAG_UPDATE(true);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		}finally{
			HibernateSessionFactory.getSession().close();
		}
		
	    find(mapping, form, request, response);
		return mapping.findForward(target);
	}
	
	public ActionForward find(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception,
			ServletException {		
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;
		List data;
		
		CategoriaForm categoriaForm = (CategoriaForm) form;
		InvCategoriaDAO invCategoriaDAO = new InvCategoriaDAO();					
	    
		try {
							
			data = invCategoriaDAO.findAll();
		    request.setAttribute("listCategoria", data);
			if(!isFLAG_UPDATE()){
				categoriaForm.reset(mapping, request);
			}else{
				setFLAG_UPDATE(false);
			}			
			
		} catch (Exception e) {
			e.printStackTrace();			
			// TODO: handle exception
		}finally{
			HibernateSessionFactory.getSession().close();
		} 	
		return mapping.findForward(target);
	}
		
}