/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.saldei.web.action.activos;

import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessages;
import org.hibernate.exception.ConstraintViolationException;

import com.saldei.hibernate.tables.activos.ActCuenta;
import com.saldei.hibernate.tables.activos.ActCuentaDAO;
import com.saldei.util.hibernate.dao.HibernateSessionFactory;
import com.saldei.web.action.BaseAction;
import com.saldei.web.form.activos.CatalogoCuentaForm;

/**
 * MyEclipse Struts Creation date: 06-03-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/catalogoCuentaAction" name="catalogoCuentaForm"
 *                input="/html/activos/catalogoCuenta.jsp" parameter="accion"
 *                scope="request"
 * @struts.action-forward name="back"
 *                        path="/catalogoCuentaAction.do?accion=Find"
 * @struts.action-forward name="updateFail"
 *                        path="/html/activos/catalogoCuenta.jsp"
 * @struts.action-forward name="success"
 *                        path="/html/activos/catalogoCuenta.jsp?accion="
 */
public class CatalogoCuentaAction extends BaseAction {

	@Override
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;

		CatalogoCuentaForm cuentaForm = (CatalogoCuentaForm) form;
		ActCuentaDAO actCuentaDAO = new ActCuentaDAO();

		try {
			cuentaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				actCuentaDAO.delete(cuentaForm.getActCuenta());
				HibernateSessionFactory.getSession().beginTransaction()
						.commit();
				errors.add("cuenta.mensaje.exito", new ActionError(
						"cuenta.mensaje.exito.delete"));
			} else {
				target = "updateFail";
				setFLAG_UPDATE(true);
			}
		} catch (ConstraintViolationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			errors.add("cuenta.mensajeError.error", new ActionError(
					"cuenta.mensajeError.error.nodelete"));
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		} finally {
			HibernateSessionFactory.getSession().close();
		}

		find(mapping, form, request, response);
		return mapping.findForward(target);
	}

	@Override
	public ActionForward insert(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;

		CatalogoCuentaForm cuentaForm = (CatalogoCuentaForm) form;
		ActCuentaDAO actCuentaDAO = new ActCuentaDAO();
		try {
			cuentaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				if (existeCuenta(form) == false) {
					actCuentaDAO.save(cuentaForm.getActCuenta());
					HibernateSessionFactory.getSession().beginTransaction()
							.commit();
					errors.add("cuenta.mensaje.exito", new ActionError(
							"cuenta.mensaje.exito.insert"));
				} else
					errors.add("cuenta.mensaje.exito", new ActionError(
							"cuenta.mensaje.exito.noinsert"));
			} else {
				setFLAG_UPDATE(true);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		} finally {
			HibernateSessionFactory.getSession().close();
		}

		find(mapping, form, request, response);
		return mapping.findForward(target);

	}

	@Override
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response,
			ActionErrors errors, ActionMessages messages) throws Exception,
			ServletException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;

		CatalogoCuentaForm cuentaForm = (CatalogoCuentaForm) form;
		ActCuentaDAO actCuentaDAO = new ActCuentaDAO();
		try {
			cuentaForm.validate(mapping, request, errors);
			if (errors.isEmpty()) {
				actCuentaDAO.merge(cuentaForm.getActCuenta());
				HibernateSessionFactory.getSession().beginTransaction()
						.commit();
				errors.add("cuenta.mensaje.exito", new ActionError(
						"cuenta.mensaje.exito.update"));
			} else {
				target = "updateFail";
				setFLAG_UPDATE(true);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			HibernateSessionFactory.getSession().beginTransaction().rollback();
		} finally {
			HibernateSessionFactory.getSession().close();
		}

		find(mapping, form, request, response);
		return mapping.findForward(target);
	}

	public ActionForward find(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception, ServletException {
		HttpSession session = request.getSession(true);
		String target = KEY_SUCCESS;
		List data;

		CatalogoCuentaForm cuentaForm = (CatalogoCuentaForm) form;
		ActCuentaDAO actCuentaDAO = new ActCuentaDAO();

		try {

			data = actCuentaDAO.findAll();
			request.setAttribute("listCuentas", data);
			if (!isFLAG_UPDATE()) {
				cuentaForm.reset(mapping, request);
			} else {
				setFLAG_UPDATE(false);
			}

		} catch (Exception e) {
			e.printStackTrace();
			// TODO: handle exception
		} finally {
			HibernateSessionFactory.getSession().close();
		}
		return mapping.findForward(target);
	}

	public boolean existeCuenta(ActionForm form) throws Exception,
			ServletException {
		String target = KEY_SUCCESS;
		ActCuenta data;
		int f = 0;
		CatalogoCuentaForm cuentaForm = (CatalogoCuentaForm) form;
		ActCuentaDAO actCuentaDAO = new ActCuentaDAO();
		try {
			data = actCuentaDAO.findById(cuentaForm.getCodCuenta());
			if (data != null)
				f = 1;
			else
				f = 0;
		} catch (Exception e) {
			e.printStackTrace();
			// TODO: handle exception
		}
		if (f == 1)
			return true;
		else
			return false;
	}

}