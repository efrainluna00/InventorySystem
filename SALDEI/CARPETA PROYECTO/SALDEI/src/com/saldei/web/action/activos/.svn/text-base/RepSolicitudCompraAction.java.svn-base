/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.saldei.web.action.activos;

import java.io.IOException;
import java.sql.SQLException;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.jasperreports.engine.JRException;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.saldei.hibernate.tables.Usuario;
import com.saldei.hibernate.tables.activos.ActCotizacion;
import com.saldei.hibernate.tables.activos.ActCotizacionDAO;
import com.saldei.util.commons.Querys;
import com.saldei.util.jdbc.JdbcHelper;
import com.saldei.web.action.seguridad.GenerarReportesAction;
import com.saldei.web.form.activos.RepSolicitudCompraForm;

import com.saldei.web.services.administracion.RptCommonServices;

/**
 * MyEclipse Struts Creation date: 06-26-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/repAsigActualesAction" name="repAsigActualesForm"
 *                input="/html/activos/repAsigActuales.jsp" parameter="accion"
 *                scope="request" validate="true"
 * @struts.action-forward name="success"
 *                        path="/html/activos/repAsigActuales.jsp"
 */
public class RepSolicitudCompraAction extends DispatchAction {
	JdbcHelper jdbcCon = new JdbcHelper();
	Querys utilQuerys = new Querys();
	RptCommonServices commonservices = new RptCommonServices();

	/**
	 * Inicializa los campos de la pantalla de Reporte de Laboratorio
	 * 
	 * @param mapping
	 *            ActionMapping
	 * @param form
	 *            ActionForm
	 * @param request
	 *            HttpServletRequest
	 * @param response
	 *            HttpServletResponse
	 * @return
	 */
	public ActionForward inicio(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		try {
			Usuario usr = (Usuario) request.getSession()
					.getAttribute("usuario");
			/** Verficica si el Usuario esta en session es valido */
			if (usr == null)
				return mapping.findForward("login");
		} catch (Exception e) {
			e.printStackTrace();
			// return mapping.findForward("ioError");
		}
		return mapping.findForward("success");
	}

	public ActionForward rptMovRecurso(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws JRException, IOException, SQLException {
		ActionErrors errors = new ActionErrors();
		GenerarReportesAction gRpt = new GenerarReportesAction();
		RepSolicitudCompraForm repSolicitudCompraForm = (RepSolicitudCompraForm) form;
		repSolicitudCompraForm.validate(mapping, request, errors);
		String iva = new String();
		if (errors.isEmpty()) {

			String formato = repSolicitudCompraForm.getFormato();
			Usuario user = (Usuario) request.getSession().getAttribute(
					"usuario");
			String usuario = "";
			String codUsu = user.getIdUsuario();
			ActCotizacion actCotizacion = new ActCotizacion();
			ActCotizacionDAO b = new ActCotizacionDAO();
			actCotizacion = (ActCotizacion) b.findByEstado("C",
					repSolicitudCompraForm.getCodSolicitud());

			if (user == null)
				usuario = "Sin Informacion";
			else
				usuario = user.getPrimerNom() + " " + user.getPrimerApe();
			String ruta;
			ruta = this.getServlet().getServletContext().getRealPath(
					"reportesJasper/sol_compra.jasper");
			HashMap<String, String> parameters = new HashMap<String, String>();
			// parameters.put("pQuery",queryString);
			// parameters.put("pUsuario",usuario);
			parameters.put("p_cod_solicitud", repSolicitudCompraForm
					.getCodSolicitud());
			if (actCotizacion.getIva() != null) {
				if (actCotizacion.getIva().equals("S")) {
					parameters.put("p_iva", "S");
				}
			}

			parameters.put("p_dir_imagen", this.getServlet()
					.getServletContext().getRealPath(
							"images/uca/logo_uca_copy1.gif"));
			parameters.put("SUBREPORT_DIR", this.getServlet()
					.getServletContext().getRealPath("reportesJasper")
					+ "/");

			return gRpt.rptUsuario(mapping, form, request, response, formato,
					ruta, parameters);
		}
		if (!errors.isEmpty()) {
			this.saveErrors(request, errors);
		}
		return mapping.findForward("updateFail");

	}

}